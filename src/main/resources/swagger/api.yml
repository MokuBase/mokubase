openapi: 3.0.3
# API-first development with OpenAPI
# This file will be used at compile time to generate Spring-MVC endpoint stubs using openapi-generator
info:
  title: 'jasper'
  version: 0.0.1
servers:
  - url: http://localhost:8081/api/v1
    description: Development server
  - url: https://localhost:8081/api/v1
    description: Development server with TLS Profile
paths:
  /ref:
    get:
      summary: List all refs
      operationId: listRefs
      tags:
        - ref
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: An paged array of refs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Refs"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Problem"
    post:
      summary: Create a ref
      operationId: createRef
      tags:
        - ref
      responses:
        201:
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Problem"
  /ref/{url}:
    get:
      summary: Info for a specific ref
      operationId: showRefByUrl
      tags:
        - ref
      parameters:
        - name: url
          in: path
          required: true
          description: The url of the ref to retrieve
          schema:
            type: string
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Refs"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Problem"
components:
  schemas:
    Ref:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Refs:
      type: array
      items:
        $ref: "#/components/schemas/Ref"
  responses:
    Problem:
      description: error occurred - see status code and problem object for more information.
      content:
        'application/problem+json':
          schema:
            $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'

  securitySchemes:
    jwt:
      type: http
      description: JWT Authentication
      scheme: bearer
      bearerFormat: JWT
security:
  - jwt: []
